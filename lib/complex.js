'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.$0 = $0;
exports.$1 = $1;
exports.parse = parse;
exports.stringify = stringify;
exports.add = add;
exports.iadd = iadd;
exports.sub = sub;
exports.isub = isub;
exports.mul = mul;
exports.imul = imul;
exports.pow = pow;
exports.ipow = ipow;
exports.div = div;
exports.idiv = idiv;
exports.mod = mod;
exports.imod = imod;

var _COMPLEX_DEFAULT_DISPLAY = require('./COMPLEX_DEFAULT_DISPLAY');

var _COMPLEX_DEFAULT_DISPLAY2 = _interopRequireDefault(_COMPLEX_DEFAULT_DISPLAY);

var _CC = require('./CC');

var _CC2 = _interopRequireDefault(_CC);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function $0() {
	return _CC2.default.$0();
}

function $1() {
	return _CC2.default.$1();
}

function parse(object) {
	var base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;
	var is_negative = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;

	return _CC2.default.from(object, base, is_negative);
}

function stringify(complex) {
	var display = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _COMPLEX_DEFAULT_DISPLAY2.default;

	return complex.toString(display);
}

function add(first, second) {
	return first.add(second);
}

function iadd(first, second) {
	return first.iadd(second);
}

function sub(first, second) {
	return first.sub(second);
}

function isub(first, second) {
	return first.isub(second);
}

function mul(first, second) {
	return first.mul(second);
}

function imul(first, second) {
	return first.imul(second);
}

function pow(first, second) {
	return first.pow(second);
}

function ipow(first, second) {
	return first.ipow(second);
}

function div(first, second) {
	return first.div(second);
}

function idiv(first, second) {
	return first.idiv(second);
}

function mod(first, second) {
	return first.mod(second);
}

function imod(first, second) {
	return first.imod(second);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jb21wbGV4LmpzIl0sIm5hbWVzIjpbIiQwIiwiJDEiLCJwYXJzZSIsInN0cmluZ2lmeSIsImFkZCIsImlhZGQiLCJzdWIiLCJpc3ViIiwibXVsIiwiaW11bCIsInBvdyIsImlwb3ciLCJkaXYiLCJpZGl2IiwibW9kIiwiaW1vZCIsIm9iamVjdCIsImJhc2UiLCJ1bmRlZmluZWQiLCJpc19uZWdhdGl2ZSIsImZyb20iLCJjb21wbGV4IiwiZGlzcGxheSIsInRvU3RyaW5nIiwiZmlyc3QiLCJzZWNvbmQiXSwibWFwcGluZ3MiOiI7Ozs7O1FBR2dCQSxFLEdBQUFBLEU7UUFJQUMsRSxHQUFBQSxFO1FBSUFDLEssR0FBQUEsSztRQUlBQyxTLEdBQUFBLFM7UUFJQUMsRyxHQUFBQSxHO1FBSUFDLEksR0FBQUEsSTtRQUlBQyxHLEdBQUFBLEc7UUFJQUMsSSxHQUFBQSxJO1FBSUFDLEcsR0FBQUEsRztRQUlBQyxJLEdBQUFBLEk7UUFJQUMsRyxHQUFBQSxHO1FBSUFDLEksR0FBQUEsSTtRQUlBQyxHLEdBQUFBLEc7UUFJQUMsSSxHQUFBQSxJO1FBSUFDLEcsR0FBQUEsRztRQUlBQyxJLEdBQUFBLEk7O0FBL0RoQjs7OztBQUNBOzs7Ozs7QUFFTyxTQUFTZixFQUFULEdBQWdCO0FBQ3RCLFFBQU8sYUFBR0EsRUFBSCxFQUFQO0FBQ0E7O0FBRU0sU0FBU0MsRUFBVCxHQUFnQjtBQUN0QixRQUFPLGFBQUdBLEVBQUgsRUFBUDtBQUNBOztBQUVNLFNBQVNDLEtBQVQsQ0FBaUJjLE1BQWpCLEVBQStEO0FBQUEsS0FBckNDLElBQXFDLHVFQUE5QkMsU0FBOEI7QUFBQSxLQUFsQkMsV0FBa0IsdUVBQUosQ0FBSTs7QUFDckUsUUFBTyxhQUFHQyxJQUFILENBQVNKLE1BQVQsRUFBa0JDLElBQWxCLEVBQXlCRSxXQUF6QixDQUFQO0FBQ0E7O0FBRU0sU0FBU2hCLFNBQVQsQ0FBcUJrQixPQUFyQixFQUFtRTtBQUFBLEtBQXBDQyxPQUFvQzs7QUFDekUsUUFBT0QsUUFBUUUsUUFBUixDQUFrQkQsT0FBbEIsQ0FBUDtBQUNBOztBQUVNLFNBQVNsQixHQUFULENBQWVvQixLQUFmLEVBQXVCQyxNQUF2QixFQUFnQztBQUN0QyxRQUFPRCxNQUFNcEIsR0FBTixDQUFVcUIsTUFBVixDQUFQO0FBQ0E7O0FBRU0sU0FBU3BCLElBQVQsQ0FBZ0JtQixLQUFoQixFQUF3QkMsTUFBeEIsRUFBaUM7QUFDdkMsUUFBT0QsTUFBTW5CLElBQU4sQ0FBV29CLE1BQVgsQ0FBUDtBQUNBOztBQUVNLFNBQVNuQixHQUFULENBQWVrQixLQUFmLEVBQXVCQyxNQUF2QixFQUFnQztBQUN0QyxRQUFPRCxNQUFNbEIsR0FBTixDQUFVbUIsTUFBVixDQUFQO0FBQ0E7O0FBRU0sU0FBU2xCLElBQVQsQ0FBZ0JpQixLQUFoQixFQUF3QkMsTUFBeEIsRUFBaUM7QUFDdkMsUUFBT0QsTUFBTWpCLElBQU4sQ0FBV2tCLE1BQVgsQ0FBUDtBQUNBOztBQUVNLFNBQVNqQixHQUFULENBQWVnQixLQUFmLEVBQXVCQyxNQUF2QixFQUFnQztBQUN0QyxRQUFPRCxNQUFNaEIsR0FBTixDQUFVaUIsTUFBVixDQUFQO0FBQ0E7O0FBRU0sU0FBU2hCLElBQVQsQ0FBZ0JlLEtBQWhCLEVBQXdCQyxNQUF4QixFQUFpQztBQUN2QyxRQUFPRCxNQUFNZixJQUFOLENBQVdnQixNQUFYLENBQVA7QUFDQTs7QUFFTSxTQUFTZixHQUFULENBQWVjLEtBQWYsRUFBdUJDLE1BQXZCLEVBQWdDO0FBQ3RDLFFBQU9ELE1BQU1kLEdBQU4sQ0FBVWUsTUFBVixDQUFQO0FBQ0E7O0FBRU0sU0FBU2QsSUFBVCxDQUFnQmEsS0FBaEIsRUFBd0JDLE1BQXhCLEVBQWlDO0FBQ3ZDLFFBQU9ELE1BQU1iLElBQU4sQ0FBV2MsTUFBWCxDQUFQO0FBQ0E7O0FBRU0sU0FBU2IsR0FBVCxDQUFlWSxLQUFmLEVBQXVCQyxNQUF2QixFQUFnQztBQUN0QyxRQUFPRCxNQUFNWixHQUFOLENBQVVhLE1BQVYsQ0FBUDtBQUNBOztBQUVNLFNBQVNaLElBQVQsQ0FBZ0JXLEtBQWhCLEVBQXdCQyxNQUF4QixFQUFpQztBQUN2QyxRQUFPRCxNQUFNWCxJQUFOLENBQVdZLE1BQVgsQ0FBUDtBQUNBOztBQUVNLFNBQVNYLEdBQVQsQ0FBZVUsS0FBZixFQUF1QkMsTUFBdkIsRUFBZ0M7QUFDdEMsUUFBT0QsTUFBTVYsR0FBTixDQUFVVyxNQUFWLENBQVA7QUFDQTs7QUFFTSxTQUFTVixJQUFULENBQWdCUyxLQUFoQixFQUF3QkMsTUFBeEIsRUFBaUM7QUFDdkMsUUFBT0QsTUFBTVQsSUFBTixDQUFXVSxNQUFYLENBQVA7QUFDQSIsImZpbGUiOiJjb21wbGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENPTVBMRVhfREVGQVVMVF9ESVNQTEFZIGZyb20gJy4vQ09NUExFWF9ERUZBVUxUX0RJU1BMQVknIDtcbmltcG9ydCBDQyBmcm9tICcuL0NDJyA7XG5cbmV4cG9ydCBmdW5jdGlvbiAkMCAoICkge1xuXHRyZXR1cm4gQ0MuJDAoKSA7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiAkMSAoICkge1xuXHRyZXR1cm4gQ0MuJDEoKSA7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZSAoIG9iamVjdCAsIGJhc2UgPSB1bmRlZmluZWQgLCBpc19uZWdhdGl2ZSA9IDAgKSB7XG5cdHJldHVybiBDQy5mcm9tKCBvYmplY3QgLCBiYXNlICwgaXNfbmVnYXRpdmUgKSA7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzdHJpbmdpZnkgKCBjb21wbGV4ICwgZGlzcGxheSA9IENPTVBMRVhfREVGQVVMVF9ESVNQTEFZICkge1xuXHRyZXR1cm4gY29tcGxleC50b1N0cmluZyggZGlzcGxheSApIDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFkZCAoIGZpcnN0ICwgc2Vjb25kICkge1xuXHRyZXR1cm4gZmlyc3QuYWRkKHNlY29uZCkgO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaWFkZCAoIGZpcnN0ICwgc2Vjb25kICkge1xuXHRyZXR1cm4gZmlyc3QuaWFkZChzZWNvbmQpIDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHN1YiAoIGZpcnN0ICwgc2Vjb25kICkge1xuXHRyZXR1cm4gZmlyc3Quc3ViKHNlY29uZCkgO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXN1YiAoIGZpcnN0ICwgc2Vjb25kICkge1xuXHRyZXR1cm4gZmlyc3QuaXN1YihzZWNvbmQpIDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG11bCAoIGZpcnN0ICwgc2Vjb25kICkge1xuXHRyZXR1cm4gZmlyc3QubXVsKHNlY29uZCkgO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaW11bCAoIGZpcnN0ICwgc2Vjb25kICkge1xuXHRyZXR1cm4gZmlyc3QuaW11bChzZWNvbmQpIDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBvdyAoIGZpcnN0ICwgc2Vjb25kICkge1xuXHRyZXR1cm4gZmlyc3QucG93KHNlY29uZCkgO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXBvdyAoIGZpcnN0ICwgc2Vjb25kICkge1xuXHRyZXR1cm4gZmlyc3QuaXBvdyhzZWNvbmQpIDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRpdiAoIGZpcnN0ICwgc2Vjb25kICkge1xuXHRyZXR1cm4gZmlyc3QuZGl2KHNlY29uZCkgO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaWRpdiAoIGZpcnN0ICwgc2Vjb25kICkge1xuXHRyZXR1cm4gZmlyc3QuaWRpdihzZWNvbmQpIDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG1vZCAoIGZpcnN0ICwgc2Vjb25kICkge1xuXHRyZXR1cm4gZmlyc3QubW9kKHNlY29uZCkgO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaW1vZCAoIGZpcnN0ICwgc2Vjb25kICkge1xuXHRyZXR1cm4gZmlyc3QuaW1vZChzZWNvbmQpIDtcbn1cbiJdfQ==