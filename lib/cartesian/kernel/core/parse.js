'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = parse;

/**
 * Parse
 *
 * /!\ DOES NOT CURRENTLY KNOW WHAT
 *     WOULD BE THE BEST IMPLEMENTATION
 */

function parse(base, $0, $1, $_1, symbol) {

	return function (s, i, j) {

		var aj = void 0,
		    bi = void 0,
		    dflt = void 0;

		if (i === j) {
			return [$0(), $0()];
		}

		var ai = i;

		var c = s[i];

		for (;;) {

			if (c === symbol) {
				if (ai === i) {
					return [$0(), $1()];
				} else if (ai === i - 1) {
					if (s[ai] === '-') {
						return [$0(), $_1()];
					} else if (s[ai] === '+') {
						return [$0(), $1()];
					} else {
						return [$0(), base(s.slice(ai, i))];
					}
				} else {
					return [$0(), base(s.slice(ai, i))];
				}
			}

			++i;

			if (i >= j) {
				return [base(s.slice(ai, j)), $0()];
			}

			c = s[i];

			if (c === '+') {
				dflt = $1;
				aj = i;
				bi = i;
				break;
			} else if (c === '-') {
				dflt = $_1;
				aj = i;
				bi = i;
				break;
			}
		}

		for (;;) {

			++i;
			c = s[i];

			if (c === symbol) {
				if (bi === i - 1) {
					return [base(s.slice(ai, aj)), dflt()];
				} else {
					return [base(s.slice(ai, aj)), base(s.slice(bi, i))];
				}
			}
		}
	};
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jYXJ0ZXNpYW4va2VybmVsL2NvcmUvcGFyc2UuanMiXSwibmFtZXMiOlsicGFyc2UiLCJiYXNlIiwiJDAiLCIkMSIsIiRfMSIsInN5bWJvbCIsInMiLCJpIiwiaiIsImFqIiwiYmkiLCJkZmx0IiwiYWkiLCJjIiwic2xpY2UiXSwibWFwcGluZ3MiOiI7Ozs7O2tCQVF3QkEsSzs7QUFQeEI7Ozs7Ozs7QUFPZSxTQUFTQSxLQUFULENBQWdCQyxJQUFoQixFQUFzQkMsRUFBdEIsRUFBMEJDLEVBQTFCLEVBQThCQyxHQUE5QixFQUFtQ0MsTUFBbkMsRUFBMkM7O0FBRXpELFFBQU8sVUFBVUMsQ0FBVixFQUFhQyxDQUFiLEVBQWdCQyxDQUFoQixFQUFtQjs7QUFFekIsTUFBSUMsV0FBSjtBQUFBLE1BQVNDLFdBQVQ7QUFBQSxNQUFjQyxhQUFkOztBQUVBLE1BQUlKLE1BQU1DLENBQVYsRUFBYTtBQUNaLFVBQU8sQ0FBQ04sSUFBRCxFQUFPQSxJQUFQLENBQVA7QUFDQTs7QUFFRCxNQUFJVSxLQUFLTCxDQUFUOztBQUVBLE1BQUlNLElBQUlQLEVBQUVDLENBQUYsQ0FBUjs7QUFFQSxXQUFTOztBQUVSLE9BQUlNLE1BQU1SLE1BQVYsRUFBa0I7QUFDakIsUUFBSU8sT0FBT0wsQ0FBWCxFQUFjO0FBQ2IsWUFBTyxDQUFDTCxJQUFELEVBQU9DLElBQVAsQ0FBUDtBQUNBLEtBRkQsTUFHSyxJQUFJUyxPQUFPTCxJQUFJLENBQWYsRUFBa0I7QUFDdEIsU0FBSUQsRUFBRU0sRUFBRixNQUFVLEdBQWQsRUFBbUI7QUFDbEIsYUFBTyxDQUFDVixJQUFELEVBQU9FLEtBQVAsQ0FBUDtBQUNBLE1BRkQsTUFHSyxJQUFJRSxFQUFFTSxFQUFGLE1BQVUsR0FBZCxFQUFtQjtBQUN2QixhQUFPLENBQUNWLElBQUQsRUFBT0MsSUFBUCxDQUFQO0FBQ0EsTUFGSSxNQUdBO0FBQ0osYUFBTyxDQUFDRCxJQUFELEVBQU9ELEtBQUtLLEVBQUVRLEtBQUYsQ0FBU0YsRUFBVCxFQUFjTCxDQUFkLENBQUwsQ0FBUCxDQUFQO0FBQ0E7QUFDRCxLQVZJLE1BV0E7QUFDSixZQUFPLENBQUNMLElBQUQsRUFBT0QsS0FBS0ssRUFBRVEsS0FBRixDQUFTRixFQUFULEVBQWNMLENBQWQsQ0FBTCxDQUFQLENBQVA7QUFDQTtBQUNEOztBQUVELEtBQUVBLENBQUY7O0FBRUEsT0FBSUEsS0FBS0MsQ0FBVCxFQUFZO0FBQ1gsV0FBTyxDQUFDUCxLQUFLSyxFQUFFUSxLQUFGLENBQVNGLEVBQVQsRUFBY0osQ0FBZCxDQUFMLENBQUQsRUFBeUJOLElBQXpCLENBQVA7QUFDQTs7QUFFRFcsT0FBSVAsRUFBRUMsQ0FBRixDQUFKOztBQUVBLE9BQUtNLE1BQU0sR0FBWCxFQUFpQjtBQUNoQkYsV0FBT1IsRUFBUDtBQUNBTSxTQUFLRixDQUFMO0FBQ0FHLFNBQUtILENBQUw7QUFDQTtBQUNBLElBTEQsTUFNSyxJQUFLTSxNQUFNLEdBQVgsRUFBaUI7QUFDckJGLFdBQU9QLEdBQVA7QUFDQUssU0FBS0YsQ0FBTDtBQUNBRyxTQUFLSCxDQUFMO0FBQ0E7QUFDQTtBQUVEOztBQUdELFdBQVM7O0FBRVIsS0FBRUEsQ0FBRjtBQUNBTSxPQUFJUCxFQUFFQyxDQUFGLENBQUo7O0FBRUEsT0FBSU0sTUFBTVIsTUFBVixFQUFrQjtBQUNqQixRQUFJSyxPQUFPSCxJQUFJLENBQWYsRUFBa0I7QUFDakIsWUFBTyxDQUFDTixLQUFLSyxFQUFFUSxLQUFGLENBQVNGLEVBQVQsRUFBY0gsRUFBZCxDQUFMLENBQUQsRUFBMEJFLE1BQTFCLENBQVA7QUFDQSxLQUZELE1BR0s7QUFDSixZQUFPLENBQUNWLEtBQUtLLEVBQUVRLEtBQUYsQ0FBU0YsRUFBVCxFQUFjSCxFQUFkLENBQUwsQ0FBRCxFQUEwQlIsS0FBS0ssRUFBRVEsS0FBRixDQUFTSixFQUFULEVBQWNILENBQWQsQ0FBTCxDQUExQixDQUFQO0FBQ0E7QUFDRDtBQUVEO0FBRUQsRUExRUQ7QUEyRUEiLCJmaWxlIjoicGFyc2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qKlxuICogUGFyc2VcbiAqXG4gKiAvIVxcIERPRVMgTk9UIENVUlJFTlRMWSBLTk9XIFdIQVRcbiAqICAgICBXT1VMRCBCRSBUSEUgQkVTVCBJTVBMRU1FTlRBVElPTlxuICovXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHBhcnNlIChiYXNlLCAkMCwgJDEsICRfMSwgc3ltYm9sKSB7XG5cblx0cmV0dXJuIGZ1bmN0aW9uIChzLCBpLCBqKSB7XG5cblx0XHRsZXQgYWogLCBiaSAsIGRmbHQgO1xuXG5cdFx0aWYgKGkgPT09IGopIHtcblx0XHRcdHJldHVybiBbJDAoKSwgJDAoKV07XG5cdFx0fVxuXG5cdFx0bGV0IGFpID0gaTtcblxuXHRcdGxldCBjID0gc1tpXTtcblxuXHRcdGZvciAoOzspIHtcblxuXHRcdFx0aWYgKGMgPT09IHN5bWJvbCkge1xuXHRcdFx0XHRpZiAoYWkgPT09IGkpIHtcblx0XHRcdFx0XHRyZXR1cm4gWyQwKCksICQxKCldO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGVsc2UgaWYgKGFpID09PSBpIC0gMSkge1xuXHRcdFx0XHRcdGlmIChzW2FpXSA9PT0gJy0nKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gWyQwKCksICRfMSgpXTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0ZWxzZSBpZiAoc1thaV0gPT09ICcrJykge1xuXHRcdFx0XHRcdFx0cmV0dXJuIFskMCgpLCAkMSgpXTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0ZWxzZSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gWyQwKCksIGJhc2Uocy5zbGljZSggYWkgLCBpKSldO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHRlbHNlIHtcblx0XHRcdFx0XHRyZXR1cm4gWyQwKCksIGJhc2Uocy5zbGljZSggYWkgLCBpKSldO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdCsraTtcblxuXHRcdFx0aWYgKGkgPj0gaikge1xuXHRcdFx0XHRyZXR1cm4gW2Jhc2Uocy5zbGljZSggYWkgLCBqKSksICQwKCldO1xuXHRcdFx0fVxuXG5cdFx0XHRjID0gc1tpXTtcblxuXHRcdFx0aWYgKCBjID09PSAnKycgKSB7XG5cdFx0XHRcdGRmbHQgPSAkMTtcblx0XHRcdFx0YWogPSBpO1xuXHRcdFx0XHRiaSA9IGk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0fVxuXHRcdFx0ZWxzZSBpZiAoIGMgPT09ICctJyApIHtcblx0XHRcdFx0ZGZsdCA9ICRfMTtcblx0XHRcdFx0YWogPSBpO1xuXHRcdFx0XHRiaSA9IGk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0fVxuXG5cdFx0fVxuXG5cblx0XHRmb3IgKDs7KSB7XG5cblx0XHRcdCsraTtcblx0XHRcdGMgPSBzW2ldO1xuXG5cdFx0XHRpZiAoYyA9PT0gc3ltYm9sKSB7XG5cdFx0XHRcdGlmIChiaSA9PT0gaSAtIDEpIHtcblx0XHRcdFx0XHRyZXR1cm4gW2Jhc2Uocy5zbGljZSggYWkgLCBhaikpLCBkZmx0KCldO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGVsc2Uge1xuXHRcdFx0XHRcdHJldHVybiBbYmFzZShzLnNsaWNlKCBhaSAsIGFqKSksIGJhc2Uocy5zbGljZSggYmkgLCBpKSldO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHR9XG5cblx0fTtcbn1cblxuIl19